class: RHo\UI\UInt32
mockPregMatch: TRUE
valid: # VALID DATA
- out: 4294967295
  in: 4294967295
- out: 4294967294
  in: '4294967294'
- out: 0
  in: 0
- out: 1
  in: 1
invalid: # INVALID DATA
- err:
    code: RHo\UIException\Exception::INT_NUMBER_TOO_SMALL
    txt: /^Integer number too small\. Min=0$/
  in: '-1'
- err:
    code: RHo\UIException\Exception::INT_NUMBER_TOO_LARGE
    txt: /^Integer number too large\. Max=4294967295$/
  in: 4294967296
- err:
    code: RHo\UIException\Exception::INT_NUMBER_OUT_OF_RANGE
    txt: /^Integer number out of range. Min=-9223372036854775808, Max=9223372036854775807$/
  in: '-9223372036854775809'
- err:
    code: RHo\UIException\Exception::VALIDATION_FAILED
    txt: /^Pattern does not match given subject$/
  in: '12345678901234567890'
- err:
    code: RHo\UIException\Exception::VALIDATION_FAILED
    txt: /^Pattern does not match given subject$/
  in: 'null'
- err:
    code: RHo\UIException\Exception::VALIDATION_FAILED
    txt: /^Pattern does not match given subject$/
  in: '+0'
- err:
    code: RHo\UIException\Exception::INVALID_DATA_TYPE
    txt: /^<int|string> data type required$/
  in: true
- err:
    code: RHo\UIException\Exception::INVALID_DATA_TYPE
    txt: /^<int|string> data type required$/
  in: false
- err:
    code: RHo\UIException\Exception::INVALID_DATA_TYPE
    txt: /^<int|string> data type required$/
  in: []
- err:
    code: RHo\UIException\Exception::INVALID_DATA_TYPE
    txt: /^<int|string> data type required$/
  in: -0.99999999999
- err:
    code: RHo\UIException\Exception::REGEXP_EXECUTION_ERROR
    txt: /^Regular expression error\. Err=0$/
  in: '32'