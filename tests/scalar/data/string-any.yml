class: RHo\UI\StrAny
mockPregMatch: FALSE
valid: # VALID DATA
- out: MandatorY
  in: MandatorY
  min: 9
  max: 9
  pattern: /^[a-z]{9}$/i
- out: opTional
  in: opTional
  min: 7
  max: 10
  pattern: /^[a-z]{7,10}$/i
- out: '8451067234'
  in: '8451067234'
  min: 10
  max: 11
  pattern: /^[0-9]{10,11}$/
- out: 'true'
  in: 'true'
  min: 1
  max: 4
  pattern: /true/
- out: ''
  in: ''
  min: NULL
  max: NULL
  pattern: NULL
invalid: # INVALID DATA
- err:
    code: RHo\UIException\Exception::VALIDATION_FAILED
    txt: Pattern does not match given subject
  in: Mandat0rY
  min: 9
  max: 9
  pattern: /^[a-z]{9}$/i
- err:
    code: RHo\UIException\Exception::VALIDATION_FAILED
    txt: Pattern does not match given subject
  in: opTi0nal
  min: 8
  max: 8
  pattern: /^[a-z1-9]{8}$/i
- err:
    code: RHo\UIException\Exception::VALIDATION_FAILED
    txt: Pattern does not match given subject
  in: 9451B67234
  min: 1
  max: 11
  pattern: /^[0-9]{10}$/
- err:
    code: RHo\UIException\Exception::REGEXP_EXECUTION_ERROR
    txt: Regular expression error
  in: foobar foobar foobar
  min: 1
  max: 100
  pattern: /(?:\D+|<\d+>)*[!?]/
- err:
    code: RHo\UIException\Exception::INVALID_DATA_TYPE
    txt: <string> data type required
  in: false
  min: 0
  max: 0
  pattern: ''
- err:
    code: RHo\UIException\Exception::INVALID_DATA_TYPE
    txt: <string> data type required
  in: true
  min: 0
  max: 0
  pattern: ''
- err:
    code: RHo\UIException\Exception::INVALID_DATA_TYPE
    txt: <string> data type required
  in: 100
  min: 0
  max: 0
  pattern: ''
- err:
    code: RHo\UIException\Exception::INVALID_DATA_TYPE
    txt: <string> data type required
  in: []
  min: 0
  max: 0
  pattern: ''
- err:
    code: RHo\UIException\Exception::STR_TOO_SHORT
    txt: Length has to be greater than or equal to 2
  in: a
  min: 2
  max: 5
  pattern: /^a{2,5}$/
- err:
    code: RHo\UIException\Exception::STR_TOO_LONG
    txt: Length has to be less than or equal to 5
  in: aaaaaa
  min: 2
  max: 5  
  pattern: /^a{2,5}$/