class: RHo\UI\Int32
mockPregMatch: TRUE
valid: # VALID DATA
- out: -2147483648
  in: -2147483648
- out: -2147483647
  in: '-2147483647'
- out: 0
  in: 0
- out: 2147483646
  in: 2147483646
- out: 2147483647
  in: '0002147483647'
invalid: # INVALID DATA
- err:
    code: RHoException\UI\Exception::INT_NUMBER_TOO_SMALL
    txt: /^Integer number too small\. Min=-2147483648$/
  in: '-2147483649'
- err:
    code: RHoException\UI\Exception::INT_NUMBER_TOO_LARGE
    txt: /^Integer number too large\. Max=2147483647$/
  in: 2147483648
- err:
    code: RHoException\UI\Exception::INT_NUMBER_OUT_OF_RANGE
    txt: /^Integer number out of range. Min=-9223372036854775808, Max=9223372036854775807$/
  in: '-9223372036854775809'
- err:
    code: RHoException\UI\Exception::VALIDATION_FAILED
    txt: /^Pattern does not match given subject$/
  in: '12345678901234567890'
- err:
    code: RHoException\UI\Exception::VALIDATION_FAILED
    txt: /^Pattern does not match given subject$/
  in: 'null'
- err:
    code: RHoException\UI\Exception::INVALID_DATA_TYPE
    txt: /^<int|string> data type required$/
  in: true
- err:
    code: RHoException\UI\Exception::INVALID_DATA_TYPE
    txt: /^<int|string> data type required$/
  in: false
- err:
    code: RHoException\UI\Exception::INVALID_DATA_TYPE
    txt: /^<int|string> data type required$/
  in: []
- err:
    code: RHoException\UI\Exception::INVALID_DATA_TYPE
    txt: /^<int|string> data type required$/
  in: -12.5
- err:
    code: RHoException\UI\Exception::REGEXP_EXECUTION_ERROR
    txt: /^Regular expression error\. Err=0$/
  in: '-89124'