class: RHo\UI\PhoneNr\Hu
mockPregMatch: TRUE
valid: # VALID DATA
- out:
    object: O:8:"stdClass":2:{s:8:"isMobile";b:0;s:5:"value";s:13:"+36-1-2345678";}
  in: '+36-1-2345678'
- out:
    object: O:8:"stdClass":2:{s:8:"isMobile";b:1;s:5:"value";s:13:"+36-20-345678";}
  in: '+36-20-345678'
- out:
    object: O:8:"stdClass":2:{s:8:"isMobile";b:1;s:5:"value";s:13:"+36-30-345678";}
  in: '+36-30-345678'
- out:
    object: O:8:"stdClass":2:{s:8:"isMobile";b:1;s:5:"value";s:13:"+36-31-345678";}
  in: '+36-31-345678'
- out:
    object: O:8:"stdClass":2:{s:8:"isMobile";b:1;s:5:"value";s:13:"+36-70-345678";}
  in: '+36-70-345678'
- out:
    object: O:8:"stdClass":2:{s:8:"isMobile";b:0;s:5:"value";s:17:"+36-71-3456789012";}
  in: '+36-71-3456789012'
invalid: # INVALID DATA
- err:
    code: RHo\UIException\Exception::VALIDATION_FAILED
    txt: Pattern does not match given subject
  in: '+36-1-234-5678'
- err:
    code: RHo\UIException\Exception::VALIDATION_FAILED
    txt: Pattern does not match given subject
  in: '06-30-456-789'
- err:
    code: RHo\UIException\Exception::VALIDATION_FAILED
    txt: Pattern does not match given subject
  in: '+36-1-234-5678'
- err:
    code: RHo\UIException\Exception::INVALID_DATA_TYPE
    txt: <string> data type required
  in: true
- err:
    code: RHo\UIException\Exception::INVALID_DATA_TYPE
    txt: <string> data type required
  in: 3612345678
- err:
    code: RHo\UIException\Exception::STR_TOO_SHORT
    txt: Length has to be greater than or equal to 13
  in: '+36-20-34567'
- err:
    code: RHo\UIException\Exception::STR_TOO_SHORT
    txt: Length has to be greater than or equal to 13
  in: ''
- err:
    code: RHo\UIException\Exception::STR_TOO_LONG
    txt: Length has to be less than or equal to 17
  in: '+36-71-34567890123'
- err:
    code: RHo\UIException\Exception::REGEXP_EXECUTION_ERROR
    txt: Regular expression error
  in: '+36-60-789-1234'