class: RHo\UI\Password
mockPregMatch: TRUE
valid: # VALID DATA
- out: aécD1
  in: aécD1
- out: Abc1d
  in: Abc1d
- out: 1abcÁ
  in: 1abcÁ
invalid: # INVALID DATA
- err:
    code: RHo\UI\Exception::VALIDATION_FAILED
    txt: Pattern does not match given subject
  in: abcd1
- err:
    code: RHo\UI\Exception::VALIDATION_FAILED
    txt: Pattern does not match given subject
  in: Abcde
- err:
    code: RHo\UI\Exception::VALIDATION_FAILED
    txt: Pattern does not match given subject
  in: 1abcd
- err:
    code: RHo\UI\Exception::VALIDATION_FAILED
    txt: Pattern does not match given subject
  in: ABCDE
- err:
    code: RHo\UI\Exception::VALIDATION_FAILED
    txt: Pattern does not match given subject
  in: 1abcd
- err:
    code: RHo\UI\Exception::VALIDATION_FAILED
    txt: Pattern does not match given subject
  in: '12345'
- err:
    code: RHo\UI\Exception::STR_TOO_SHORT
    txt: Length has to be greater than or equal to 5
  in: éc1
- err:
    code: RHo\UI\Exception::STR_TOO_SHORT
    txt: Length has to be greater than or equal to 5
  in: Ab1d
- err:
    code: RHo\UI\Exception::STR_TOO_SHORT
    txt: Length has to be greater than or equal to 5
  in: aÚcd
- err:
    code: RHo\UI\Exception::STR_TOO_LONG
    txt: Length has to be less than or equal to 64
  in: ckSCIcBJO9JVIIYj44ZmlJO7owDQaICvEF8wTeZasNq1TJUhtC9165BRFpqhnp1bd
- err:
    code: RHo\UI\Exception::INVALID_DATA_TYPE
    txt: <string> data type required
  in: false
- err:
    code: RHo\UI\Exception::REGEXP_ERROR
    txt: Regular expression error
  in: 'PASSWoRD'