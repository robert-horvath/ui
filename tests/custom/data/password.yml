class: RHo\UI\Password
mockPregMatch: TRUE
valid: # VALID DATA
- out: aécD1
  in: aécD1
- out: Abc1d
  in: Abc1d
- out: 1abcÁ
  in: 1abcÁ
invalid: # INVALID DATA
- err:
    code: RHo\UIException\Exception::VALIDATION_FAILED
    txt: /^Pattern does not match given subject$/
  in: abcd1
- err:
    code: RHo\UIException\Exception::VALIDATION_FAILED
    txt: /^Pattern does not match given subject$/
  in: Abcde
- err:
    code: RHo\UIException\Exception::VALIDATION_FAILED
    txt: /^Pattern does not match given subject$/
  in: 1abcd
- err:
    code: RHo\UIException\Exception::VALIDATION_FAILED
    txt: /^Pattern does not match given subject$/
  in: ABCDE
- err:
    code: RHo\UIException\Exception::VALIDATION_FAILED
    txt: /^Pattern does not match given subject$/
  in: 1abcd
- err:
    code: RHo\UIException\Exception::VALIDATION_FAILED
    txt: /^Pattern does not match given subject$/
  in: '12345'
- err:
    code: RHo\UIException\Exception::STR_TOO_SHORT
    txt: /^String length too short\. Min=5$/
  in: éc1
- err:
    code: RHo\UIException\Exception::STR_TOO_SHORT
    txt: /^String length too short\. Min=5$/
  in: Ab1d
- err:
    code: RHo\UIException\Exception::STR_TOO_SHORT
    txt: /^String length too short\. Min=5$/
  in: aÚcd
- err:
    code: RHo\UIException\Exception::STR_TOO_LONG
    txt: /^String length too long\. Max=64$/
  in: ckSCIcBJO9JVIIYj44ZmlJO7owDQaICvEF8wTeZasNq1TJUhtC9165BRFpqhnp1bd
- err:
    code: RHo\UIException\Exception::INVALID_DATA_TYPE
    txt: /^<string> data type required$/
  in: false
- err:
    code: RHo\UIException\Exception::REGEXP_EXECUTION_ERROR
    txt: /^Regular expression error\. Err=0$/
  in: 'PASSWoRD'