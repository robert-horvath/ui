class: RHo\UI\Name
mockPregMatch: TRUE
valid: # VALID DATA
- out: "d'Arras"
  in: "d'Arras"
- out: Luther King, Jr.
  in: Luther King, Jr.
- out: Róbert
  in: Róbert
- out: Li-Wuä
  in: Li-Wuä
- out: Hector Sausage-Hausen
  in: Hector Sausage-Hausen
invalid: # INVALID DATA
- err:
    code: RHoException\UI\Exception::VALIDATION_FAILED
    txt: /^Pattern does not match given subject$/
  in: (Ádám)
- err:
    code: RHoException\UI\Exception::VALIDATION_FAILED
    txt: /^Pattern does not match given subject$/
  in: Tamás!
- err:
    code: RHoException\UI\Exception::VALIDATION_FAILED
    txt: /^Pattern does not match given subject$/
  in: Nam3
- err:
    code: RHoException\UI\Exception::VALIDATION_FAILED
    txt: /^Pattern does not match given subject$/
  in: "&/%$§"
- err:
    code: RHoException\UI\Exception::VALIDATION_FAILED
    txt: /^Pattern does not match given subject$/
  in: Rób+ert
- err:
    code: RHoException\UI\Exception::STR_TOO_SHORT
    txt: /^String length too short\. Min=2$/
  in: L
- err:
    code: RHoException\UI\Exception::STR_TOO_LONG
    txt: /^String length too long\. Max=30$/
  in: This is a very long name.......
- err:
    code: RHoException\UI\Exception::INVALID_DATA_TYPE
    txt: /^<string> data type required$/
  in: false
- err:
    code: RHoException\UI\Exception::INVALID_DATA_TYPE
    txt: /^<string> data type required$/
  in: true
- err:
    code: RHoException\UI\Exception::INVALID_DATA_TYPE
    txt: /^<string> data type required$/
  in: []
- err:
    code: RHoException\UI\Exception::REGEXP_EXECUTION_ERROR
    txt: /^Regular expression error\. Err=0$/
  in: Hector Sausage-Hausen